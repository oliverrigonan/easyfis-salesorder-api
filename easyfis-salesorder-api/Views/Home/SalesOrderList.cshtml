<h3>Sales Order List</h3>
<div class="panel panel-default">
    <div class="panel-heading">
        <table style="width: 100%" border="0">
            <tr>
                <td style="width: 24%">
                    <div class="input-group ">
                        <span class="input-group-addon"><b>Start Date</b></span>
                        <div class="comboBox-wide" id="cboSalesOrderListStartDate"></div>
                    </div>
                </td>
                <td style="width: 1%"></td>
                <td style="width: 24%" align="right">
                    <div class="input-group ">
                        <span class="input-group-addon"><b>End Date</b></span>
                        <div class="comboBox-wide" id="cboSalesOrderListEndDate"></div>
                    </div>
                </td>
                <td style="width: 1%"></td>
                <td style="width: 50%">
                    <div class="input-group">
                        <span class="input-group-addon"><b>Search</b></span>
                        <input type="text" class="form-control" id="inpSalesOrderListSearchFilter" placeholder="Filter...">
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <div class="panel-body">
        <div id="salesOrderListFlexgrid"></div>
    </div>
    <div class="panel-footer">
        <div class="row">
            <div class="col-md-8">
                <div class="row">
                    <div class="btn-group col-md-7" id="salesOrderListNavigationPageGrid">
                        <button type="button" class="btn btn-default border-custom" id="btnSalesOrderListMoveToFirstPageGrid">
                            <span class="glyphicon glyphicon-fast-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" id="btnSalesOrderListMoveToPreviousPageGrid">
                            <span class="glyphicon glyphicon-step-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnSalesOrderListCurrentPageGrid"></button>
                        <button type="button" class="btn btn-default border-custom" id="btnSalesOrderListMoveToNextPageGrid">
                            <span class="glyphicon glyphicon-step-forward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" id="btnSalesOrderListMoveToLastPageGrid">
                            <span class="glyphicon glyphicon-fast-forward"></span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-addon"><b>TOTAL AMOUNT</b></span>
                    <input type="text" class="form-control" id="inpSalesOrderListTotalAmount" placeholder="0.00" style="text-align: right;" readonly />
                </div>
            </div>
        </div>

    </div>
</div>

@Scripts.Render("~/wijmo/js")
<script>
    var cboSalesOrderListStartDate = new wijmo.input.InputDate('#cboSalesOrderListStartDate');
    var isCboSalesOrderListStartDateSelected = false;
    var cboSalesOrderListEndDate = new wijmo.input.InputDate('#cboSalesOrderListEndDate');
    var isCboSalesOrderListEndDate = false;

    var salesOrderListCollectionView = new wijmo.collections.CollectionView(new wijmo.collections.ObservableArray);
    var salesOrderListFlexgrid = new wijmo.grid.FlexGrid("#salesOrderListFlexgrid");

    function createInputDateFilters() {
        cboSalesOrderListStartDate.dispose();
        cboSalesOrderListStartDate = new wijmo.input.InputDate('#cboSalesOrderListStartDate', {
            format: 'MM/dd/yyyy',
            value: new Date(),
            onValueChanged: function () {
                if (isCboSalesOrderListStartDateSelected) {
                    createSalesOrderListFlexGrid();
                } else {
                    isCboSalesOrderListStartDateSelected = true;
                }
            }
        });

        cboSalesOrderListEndDate.dispose();
        cboSalesOrderListEndDate = new wijmo.input.InputDate('#cboSalesOrderListEndDate', {
            format: 'MM/dd/yyyy',
            value: new Date(),
            onValueChanged: function () {
                if (isCboSalesOrderListEndDate) {
                    createSalesOrderListFlexGrid();
                } else {
                    isCboSalesOrderListEndDate = true;
                }
            }
        });

        createSalesOrderListFlexGrid();
    }

    function getSalesOrderListData() {
        var salesOrderListDataObservableArray = new wijmo.collections.ObservableArray;

        var startDate = cboSalesOrderListStartDate.value.toLocaleDateString().replace(/\//g, '-');
        var endDate = cboSalesOrderListEndDate.value.toLocaleDateString().replace(/\//g, '-');

        $.ajax({
            url: '/api/salesOrder/list/' + startDate + '/' + endDate,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            success: function (results) {
                var totalAmount = 0;

                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {

                        if (results[i]["ListSalesOrderItems"].length > 0) {
                            for (j = 0; j < results[i]["ListSalesOrderItems"].length; j++) {

                                var SODateResult = new Date(results[i]["SODate"])
                                var SODate = ('0' + (SODateResult.getMonth() + 1)).slice(-2) + '/' + ('0' + SODateResult.getDate()).slice(-2) + '/' + SODateResult.getFullYear();

                                salesOrderListDataObservableArray.push({
                                    SONumber: results[i]["SONumber"],
                                    SODate: SODate,
                                    DocumentReference: results[i]["DocumentReference"],
                                    Customer: results[i]["Customer"],
                                    Remarks: results[i]["Remarks"],
                                    ItemCode: results[i]["ListSalesOrderItems"][j]["ItemCode"],
                                    ItemDescription: results[i]["ListSalesOrderItems"][j]["ItemDescription"],
                                    Price: results[i]["ListSalesOrderItems"][j]["c"],
                                    PriceDisplay: parseFloat(results[i]["ListSalesOrderItems"][j]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Quantity: results[i]["ListSalesOrderItems"][j]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["ListSalesOrderItems"][j]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Amount: results[i]["ListSalesOrderItems"][j]["Amount"],
                                    AmountDisplay: parseFloat(results[i]["ListSalesOrderItems"][j]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                                });

                                totalAmount += parseFloat(results[i]["ListSalesOrderItems"][j]["Amount"]);
                            }
                        }
                    }
                }

                document.getElementById("inpSalesOrderListTotalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
        });

        return salesOrderListDataObservableArray;
    }

    function createSalesOrderListFlexGrid() {
        salesOrderListCollectionView = new wijmo.collections.CollectionView(getSalesOrderListData());
        salesOrderListCollectionView.canFilter = true;
        salesOrderListCollectionView.pageSize = 15;

        var filterText = '';
        $('#inpSalesOrderListSearchFilter').keyup(function () {
            filterText = this.value.toLowerCase();
            salesOrderListCollectionView.refresh();
        });

        salesOrderListCollectionView.filter = function (item) {
            return !filterText || (item.SONumber.toLowerCase().indexOf(filterText) > -1)
                || !filterText || (item.DocumentReference.toLowerCase().indexOf(filterText) > -1)
                || !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1);
        }

        salesOrderListCollectionView.collectionChanged.addHandler(function (sender, args) {
            updateSalesOrderListNavigationButtons();
        });

        salesOrderListFlexgrid.dispose();
        salesOrderListFlexgrid = new wijmo.grid.FlexGrid('#salesOrderListFlexgrid');
        salesOrderListFlexgrid.initialize({
            columns: [
                {
                    "header": "SO No.",
                    "binding": "SONumber",
                    "allowSorting": true,
                    "width": 100
                },
                {
                    "header": "SI Date ",
                    "binding": "SODate",
                    "allowSorting": true,
                    "width": 90
                },
                {
                    "header": "Doc. Ref.",
                    "binding": "DocumentReference",
                    "allowSorting": true,
                    "width": "1*"
                },
                {
                    "header": "Code",
                    "binding": "ItemCode",
                    "allowSorting": true,
                    "width": "1*"
                },
                {
                    "header": "Description",
                    "binding": "ItemDescription",
                    "allowSorting": true,
                    "width": "2*"
                },
                {
                    "header": "Price",
                    "binding": "PriceDisplay",
                    "allowSorting": true,
                    "align": "right",
                    "width": "1*"
                },
                {
                    "header": "Qty.",
                    "binding": "QuantityDisplay",
                    "allowSorting": true,
                    "align": "right",
                    "width": "1*"
                },
                {
                    "header": "Amount",
                    "binding": "AmountDisplay",
                    "allowSorting": true,
                    "align": "right",
                    "width": "1*"
                },
            ],
            autoGenerateColumns: false,
            itemsSource: salesOrderListCollectionView,
            isReadOnly: true,
            autoSizeMode: wijmo.grid.AutoSizeMode.Both,
            allowDragging: wijmo.grid.AllowDragging.None,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        salesOrderListFlexgrid.trackChanges = true;

        updateSalesOrderListNavigationButtons();

        btnSalesOrderListMoveToFirstPageGrid.addEventListener('click', function () {
            salesOrderListCollectionView.moveToFirstPage();
            updateSalesOrderListNavigationButtons();
        });

        btnSalesOrderListMoveToPreviousPageGrid.addEventListener('click', function () {
            salesOrderListCollectionView.moveToPreviousPage();
            updateSalesOrderListNavigationButtons();
        });

        btnSalesOrderListMoveToNextPageGrid.addEventListener('click', function () {
            salesOrderListCollectionView.moveToNextPage();
            updateSalesOrderListNavigationButtons();
        });

        btnSalesOrderListMoveToLastPageGrid.addEventListener('click', function () {
            salesOrderListCollectionView.moveToLastPage();
            updateSalesOrderListNavigationButtons();
        });
    }

    function updateSalesOrderListNavigationButtons() {
        if (salesOrderListCollectionView.pageSize <= 0) {
            document.getElementById('salesOrderListNavigationPageGrid').style.display = 'none';
            return;
        }
        document.getElementById('salesOrderListNavigationPageGrid').style.display = 'block';
        if (salesOrderListCollectionView.pageIndex === 0) {
            btnSalesOrderListMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
            btnSalesOrderListMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
            btnSalesOrderListMoveToNextPageGrid.removeAttribute('disabled');
            btnSalesOrderListMoveToLastPageGrid.removeAttribute('disabled');
        } else if (salesOrderListCollectionView.pageIndex === (salesOrderListCollectionView.pageCount - 1)) {
            btnSalesOrderListMoveToFirstPageGrid.removeAttribute('disabled');
            btnSalesOrderListMoveToPreviousPageGrid.removeAttribute('disabled');
            btnSalesOrderListMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            btnSalesOrderListMoveToNextPageGrid.setAttribute('disabled', 'disabled');
        } else {
            btnSalesOrderListMoveToFirstPageGrid.removeAttribute('disabled');
            btnSalesOrderListMoveToPreviousPageGrid.removeAttribute('disabled');
            btnSalesOrderListMoveToNextPageGrid.removeAttribute('disabled');
            btnSalesOrderListMoveToLastPageGrid.removeAttribute('disabled');
        }
        btnSalesOrderListCurrentPageGrid.innerHTML = (salesOrderListCollectionView.pageIndex + 1) + ' / ' + salesOrderListCollectionView.pageCount;
    }


    $(document).ready(function () {
        createInputDateFilters();
    });
</script>